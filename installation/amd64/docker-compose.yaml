# Requires the Docker Compose V2.
# See https://docs.docker.com/compose/compose-file/compose-file-v3
# and https://github.com/compose-spec/compose-spec/blob/master/spec.md
# for details concerning the `docker-compose.yaml` file syntax.

# Variables are in ${VARIABLE:-DEFAULT_VALUE} format
# to ensure that default values are given to the Dockerfile.
# Using a `.env` file to set variables is strongly recommended.

# Run `make env` to create a basic `.env` file with the UID and GID variables.
# Compute Capability must be specified via the `CCA` variable.

# Using a `docker-compose.yaml` file has many advantages
# over creating custom shell scripts for each project.
# The settings are much easier to see and maintain than scattered shell scripts.
# Also, Compose is a native Docker component, simplifying project maintenance.

# Set the host environment variable `BUILDKIT_PROGRESS=plain` to see the full build log.
# https://github.com/docker/cli/blob/master/docs/reference/commandline/cli.md#environment-variables

# See https://pytorch.org/docs/stable/cpp_extension.html for an
# explanation of how to specify the `TORCH_CUDA_ARCH_LIST` variable.
# The variable `CCA` is used to specify `TORCH_CUDA_ARCH_LIST`.


services:
  train: # Base service to inherit from. Do not use directly.
    hostname: train
    extra_hosts:
      - "train:127.0.0.1"
    image: ${IMAGE_NAME:-train}
    network_mode: host  # Use the same network as the host, may cause security issues.
    # `ipc: host` removes the shared memory cap but is a known security vulnerability.
    #    ipc: host  # Equivalent to `--ipc=host` in `docker run`. Disable this on WSL.
    #    shm_size: 1GB  # Explicit shared memory limit. No security issues this way.
    tty: true  # Equivalent to `-t` flag in `docker run`.
    init: true  # Equivalent to `--init` flag in `docker run`.
    stdin_open: true
    volumes: # Equivalent to `-v` flag in `docker run`.
      # Use this if the docker-compose.yaml file is at the project root.
      - ../../.:${PROJECT_ROOT:-/opt/project}
      # Preserve VSCode extensions between containers.
      - ${HOME}/.vscode-server:/home/${USR}/.vscode-server
    #    tmpfs:  # Create directory in RAM for fast data IO.
    #      - /opt/data
    build: # Options for building. Used when `--build` is called in `docker compose`.
      # Set `TARGET_STAGE` to `train-builds` to get just the wheels in `/tmp/dist`.
      target: ${TARGET_STAGE:-train}  # Specify build target.
      context: .  # Nearly all files are ignored due to `.dockerignore` settings.
      dockerfile: Dockerfile
      args: # Equivalent to `--build-arg`.
        BUILD_MODE: ${BUILD_MODE:-exclude}
        LINUX_DISTRO: ${LINUX_DISTRO:-ubuntu}
        DISTRO_VERSION: ${DISTRO_VERSION:-20.04}
        PYTHON_VERSION: ${PYTHON_VERSION:-3.8}
        MKL_MODE: ${MKL_MODE:-include}  # MKL_MODE can be `include` or `exclude`.
        # Variables for building PyTorch. Must be valid git tags.
        PYTORCH_VERSION_TAG: ${PYTORCH_VERSION_TAG:-v1.13.0}
        TORCHVISION_VERSION_TAG: ${TORCHVISION_VERSION_TAG:-v0.14.0}
        # Variables for downloading PyTorch instead of building.
        PYTORCH_VERSION: ${PYTORCH_VERSION:-1.13.0}
        TORCHVISION_VERSION: ${TORCHVISION_VERSION:-0.14.0}
        PYTORCH_INDEX_URL: ${PYTORCH_INDEX_URL:-https://download.pytorch.org/whl/cpu}
        PROJECT_ROOT: ${PROJECT_ROOT:-/opt/project}
        GID: ${GID:-1000}
        UID: ${UID:-1000}
        GRP: ${GRP:-user}
        USR: ${USR:-user}
    environment:
      WANDB_MODE: ${WANDB_MODE:-disabled}
      WANDB_API_KEY: ${WANDB_API_KEY}
    working_dir: ${PROJECT_ROOT:-/opt/project}
    user: ${UID:-1000}:${GID:-1000}

  cpu:
    extends: train
    build:
      args:
        TRAIN_IMAGE: ${LINUX_DISTRO:-ubuntu}:${DISTRO_VERSION:-20.04}

  cuda:
    extends: train
    image: ${IMAGE_NAME:-train}:cuda
    environment: # Environment variables for the container, not the build. Equivalent to `--env`
      CUDA_DEVICE_ORDER: PCI_BUS_ID
    build:
      args:
        USE_CUDA: 1
        PYTORCH_INDEX_URL: ${PYTORCH_INDEX_URL:-https://download.pytorch.org/whl/cu117}
        BUILD_CAFFE2: 0  # Caffe2 disabled for faster build.
        BUILD_CAFFE2_OPS: 0
        BUILD_TEST: 0
        USE_NNPACK: 0
        USE_QNNPACK: 0
        CUDA_VERSION: ${CUDA_VERSION:-11.7.1}
        CUDNN_VERSION: ${CUDNN_VERSION:-8}
        # Fails if `BUILD_MODE=include` but `CCA` is not set explicitly.
        TORCH_CUDA_ARCH_LIST: ${CCA}
    deploy: # API dependent on compose version.
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [ gpu ]
